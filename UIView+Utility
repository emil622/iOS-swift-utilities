extension UIView {

    class func nib<T: UIView>(owner: Any? = nil) -> T {
        return Bundle.main.loadNibNamed(String(describing: T.self), owner: owner, options: nil)![0] as! T
    }
    
    static var className: String {
        return String(describing: self)
    }
    
    func makeDashedBorder(color: UIColor = UIColor.gray,
                          pattern: [NSNumber] = [6, 3],
                          cornerRadius: CGFloat = 0.0,
                          lineWidth: CGFloat = 1.0)  {
        
        let borderLayer = CAShapeLayer()
        borderLayer.strokeColor = color.cgColor
        borderLayer.lineDashPattern = pattern
        borderLayer.cornerRadius = cornerRadius
        borderLayer.lineWidth = lineWidth
        borderLayer.frame = bounds
        borderLayer.fillColor = nil
        borderLayer.path = UIBezierPath(roundedRect: bounds, cornerRadius: cornerRadius).cgPath
        layer.addSublayer(borderLayer)
    }
    
    func shake() {
        let shake = CABasicAnimation(keyPath: "position")
        let xDelta = CGFloat(5)
        shake.duration = 0.05
        shake.repeatCount = 4
        shake.autoreverses = true
        
        let from_point = CGPoint(x: self.center.x - xDelta, y: self.center.y)
        let from_value = NSValue(cgPoint: from_point)
        
        let to_point = CGPoint(x: self.center.x + xDelta, y: self.center.y)
        let to_value = NSValue(cgPoint: to_point)
        
        shake.fromValue = from_value
        shake.toValue = to_value
        shake.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseInEaseOut)
        self.layer.add(shake, forKey: "position")
    }
    
    func fadeOut(withDuration duration: TimeInterval = 0.2) {
        UIView.animate(withDuration: duration, animations: {
            self.alpha = 0.0
        }) { finished in
            self.isHidden = true
        }
    }
    
    func fadeIn(withDuration duration: TimeInterval = 0.2) {
        isHidden = false
        UIView.animate(withDuration: duration) {
            self.alpha = 1.0
        }
    }
}
